{
  "enabled": true,
  "servers": [
    {
      "name": "filesystem",
      "description": "Local file system access",
      "enabled": true,
      "stdio": {
        "executor": "npx",
        "command": "@modelcontextprotocol/server-filesystem",
        "args": ["./"]
      }
    },
    {
      "name": "github",
      "description": "GitHub repository integration",
      "enabled": false,
      "stdio": {
        "executor": "npx",
        "command": "@modelcontextprotocol/server-github",
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_TOKEN}"
        }
      }
    },
    {
      "name": "memory",
      "description": "Persistent memory and knowledge management",
      "enabled": false,
      "stdio": {
        "executor": "npx",
        "command": "@modelcontextprotocol/server-memory"
      }
    },
    {
      "name": "brave-search",
      "description": "Web search via Brave Search API",
      "enabled": false,
      "stdio": {
        "executor": "uvx",
        "command": "mcp-server-brave-search",
        "env": {
          "BRAVE_API_KEY": "${BRAVE_API_KEY}"
        }
      }
    },
    {
      "name": "everything-server",
      "description": "Comprehensive test server with all MCP features",
      "enabled": false,
      "stdio": {
        "executor": "docker",
        "command": "modelcontextprotocol/server-everything:latest",
        "dockerImage": "modelcontextprotocol/server-everything:latest"
      }
    },
    {
      "name": "postgres",
      "description": "PostgreSQL database access",
      "enabled": false,
      "stdio": {
        "executor": "uvx",
        "command": "mcp-server-postgres",
        "args": ["postgresql://localhost:5432/mydb"],
        "env": {
          "PGPASSWORD": "${DB_PASSWORD}"
        }
      },
      "toolFilters": {
        "blockedTools": ["execute_write", "drop_table", "truncate"]
      }
    },
    {
      "name": "remote-api",
      "description": "Remote MCP server with OAuth authentication",
      "transport": "streamableHttp",
      "enabled": false,
      "streamableHttp": {
        "url": "https://api.example.com/mcp/streamable",
        "auth": {
          "type": "oauth2.1",
          "clientId": "${OAUTH_CLIENT_ID}",
          "clientSecret": "${OAUTH_CLIENT_SECRET}",
          "tokenUrl": "https://api.example.com/oauth/token"
        }
      }
    }
  ]
} 